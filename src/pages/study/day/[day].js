import { useEffect, useState } from 'react';import { useRouter } from 'next/router';import lessonsData from '../../../data/lessons.json';import { supabase } from '../../../lib/supabaseClient';import { Container, Card, Button } from '../../../components/ui';function lessonKey(day){const map={1:'day1_pronouns',2:'day2_objects',3:'day3_tenses',4:'day4_articles',5:'day5_adj_adv',6:'day6_relatives'};return map[day]}export default function StudyDay(){const router=useRouter();const day=parseInt(router.query.day,10)||1;const key=lessonKey(day);const L=lessonsData.lessons[key];const [answers,setAnswers]=useState({});const [session,setSession]=useState(null);const [score,setScore]=useState(null);useEffect(()=>{supabase.auth.getSession().then(({data})=>setSession(data.session||null))},[]);const submitScore=async()=>{if(!session){alert('로그인이 필요합니다');return}const correct=L.quiz.filter((q,i)=>(answers[i]===q.answer)).length;const s=Math.round(correct/L.quiz.length*100);setScore(s);const {error}=await supabase.from('progress').upsert({user_id:session.user.id,lesson_key:key,score:s,completed:true},{onConflict:'user_id,lesson_key'});if(error)alert(error.message);else alert('진도 저장 완료!')};if(!L)return <Container><p>데이터 없음</p></Container>;return(<Container><h2>{L.title}</h2><Card><b>개념</b><p>{L.concept}</p></Card><Card><b>예문</b><ul>{L.examples.map((ex,i)=>(<li key={i}>[{ex[0]}] {ex[1]} → {ex[2]}</li>))}</ul></Card><Card><b>퀴즈</b>{L.quiz.map((q,i)=>(<div key={i} style={{margin:'10px 0'}}><div>Q{i+1}. {q.q}</div><div>{q.options.map(opt=>(<label key={opt} style={{marginRight:12}}><input type='radio' name={`q${i}`} value={opt} onChange={()=>setAnswers(a=>({...a,[i]:opt}))} checked={answers[i]===opt}/>{' '}{opt}</label>))}</div></div>))}<Button onClick={submitScore}>레슨 완료로 저장</Button>{score!==null&&<p>점수: {score}</p>}</Card></Container>) }